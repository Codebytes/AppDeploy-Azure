name: Developer Environment Workflow

on: pull_request

env:
  # The name of the resource group to be created.
  DEV_RG_NAME: "RG-Dev-AppDeploy-Azure-${{ github.event.pull_request.number}}"

  # The location to store the meta data for the deployment.
  DEV_LOCATION: "westeurope"

  # The name of the WebApp
  DEV_WEBAPP_NAME: "DEV-AppDeploy-Azure-ADO40-${{ github.event.pull_request.number}}"

jobs:
  buildImage:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
    # checkout code
    - name: checkout branch
      uses: actions/checkout@v2

    # log into Azure
    - name: "Login via Azure CLI"
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # authenticate into Docker
    - name: "docker login"
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.DOCKER_LOGIN_SERVER }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build and push Docker image
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ secrets.DOCKER_LOGIN_SERVER }}/appdeployazure-ado40:${{ github.sha }}

  deploy_container:

    runs-on: ubuntu-latest
    name: Create and Deploy Container to Azure
    needs: buildImage

    # declare GitHub Environment
    environment:
      name: Dev
      url: https://${{ env.DEV_WEBAPP_NAME}}.azurewebsites.net

    steps:
    # checkout code
    - name: checkout branch
      uses: actions/checkout@v2

    # log into Azure
    - name: "Login via Azure CLI"
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # deploy infrastructure with Azure Bicep
    - name: deploy
      id: deploy
      uses: azure/arm-deploy@v1
      with:
        resourceGroupName: ${{ env.DEV_RG_NAME }}
        template: ./infra/bicep/main.bicep
        parameters: \
            location=${{ env.DEV_LOCATION }} ` \
            rgName=${{ env.DEV_RG_NAME }} ` \
            webAppName=${{ env.DEV_WEBAPP_NAME}} ` \
            dockerRegistryHost=${{ secrets.DOCKER_LOGIN_SERVER }} ` \
            dockerRegistryServerUsername=${{ secrets.DOCKER_USERNAME }} ` \
            dockerRegistryServerPassword=${{ secrets.DOCKER_PASSWORD }} ` \
            dockerImage=appdeployazure-ado40:${{ github.sha }} `
        failOnStdErr: false
      
    - name: 'Run Azure webapp deploy action'
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ steps.deploy.outputs.webAppName }} # Replace with your app name
        package: 'app'